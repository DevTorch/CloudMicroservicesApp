#server:
#  port: ${random.int(8075.8085)}
spring:
  application:
    name: NOTIFICATION-SERVICE
  config:
    import: optional:file:.env[.properties]

  datasource:
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    url: jdbc:h2:mem:db-notification-service-message-storage
    driver-class-name: org.h2.Driver

  jpa:
    show-sql: true
    database-platform: org.hibernate.dialect.H2Dialect
    properties:
      hibernate:
        hbm2ddl:
          auto: none
          highlight_sql: true
          format_sql: true

  h2:
    console:
      enabled: true

  kafka:
    consumer:
      bootstrap-servers: localhost:9092,localhost:9094
      group-id: cloudmicroservices-consumer-group
      properties:
        spring.json.trusted.packages: "springcloudms.notificationservice.events"
        spring.json.type.mapping: "springcloudms.inventoryservice.events.AddNewBookEvent:springcloudms.notificationservice.events.AddNewBookEvent"
        auto.create.topics.enable: false

eureka:
  instance:
    prefer-ip-address: true
#    instance-id: ${spring.application.name}:${server.port}
    instance-id: ${spring.application.name}:${random.uuid}
    hostname: http://localhost

  client:
    register-with-eureka: true
    fetch-registry: false
    service-url:
      defaultZone: ${eureka.instance.hostname}:8761/eureka

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always